#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

// 34 - rotator press
// 6 19 20 21  35 - cursor movement
// 
// 0   1   2   3   4   5           6           7   8   9   10  11  12
// 13  14  15  16  17  18      19  20  21      22  23  24  25  26  27
// 28  29  30  31  32  33  34      35          36  37  38  39  40  41
//             42  43  44                      45  46  47

// #define KEYS_L 0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33
// #define KEYS_R 7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41
// #define THUMBS 42 43 44 45 46 47

#define DVRK 0
#define QWERTY 1
#define NUM 2
#define SYM 3
#define FN 4
#define SYS 5

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            /*hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 42 43 44 45 46 47>;*/
            /*hold-trigger-on-release;*/
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            /*hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 42 43 44 45 46 47>;*/
            /*hold-trigger-on-release;*/
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        FN_LAYER {
            if-layers = <NUM SYM>;
            then-layer = <FN>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DVRK";
            bindings = <
&kp TAB     &kp SEMI        &kp COMMA   &kp DOT     &kp P           &kp Y                              &kp UP                &kp F  &kp G           &kp C           &kp R           &kp L           &kp BSPC
&kp LCTRL   &hml LCTRL A    &hml LALT O &hml LGUI E &hml LSHIFT U   &kp I                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp D  &hmr RSHFT H    &hmr RGUI T     &hmr RALT N     &hmr RCTRL S    &kp MINUS
&td0        &kp SQT         &kp Q       &kp J       &kp K           &kp X       &kp C_MUTE             &kp DOWN              &kp B  &kp M           &kp W           &kp V           &kp Z           &kp RSHIFT
                            &kp LGUI    &mo SYM     &kp SPACE                                                                &kp ENTER  &mo NUM   &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        qwerty_layer {
            display-name = "QWERTY";
            bindings = <
&trans  &kp Q  &kp W      &kp E     &kp R  &kp T                              &kp UP                &kp Y        &kp U  &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S      &kp D     &kp F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X      &kp C     &kp V  &kp B       &kp C_MUTE             &kp DOWN              &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &trans
        &kp LGUI    &mo SYM       &kp SPACE                                                                &kp ENTER  &mo NUM   &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        number_layer {
            display-name = "NUM";
            bindings = <
&trans  &kp N1      &kp N2      &kp N3  &kp N4  &kp N5                              &mmv MOVE_UP                        &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &kp N6      &kp N7      &kp N8  &kp N9  &kp N0              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans      &trans      &trans  &trans  &kp KP_DOT  &kp C_MUTE              &mmv MOVE_DOWN                      &trans    &trans    &trans  &trans     &trans  &trans
                                &trans  &trans  &trans                                                                  &trans    &trans    &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        symbol_layer {
            display-name = "SYM";
            bindings = <
&kp TILDE  &kp PLUS         &kp LBKT  &kp LBRC  &kp LPAR     &kp AMPS                           &mmv MOVE_UP                     &kp EQUAL  &kp RPAR      &kp RBRC   &kp RBKT      &kp SLASH       &trans
&trans     &kp EXCLAMATION  &kp AT    &kp HASH  &kp PERCENT  &kp PIPE           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PIPE   &kp CARET     &kp GRAVE  &kp ASTERISK  &kp DOLLAR      &kp MINUS
&trans     &trans           &trans    &none     &trans       &trans     &trans                  &mmv MOVE_DOWN                   &trans     &kp QUESTION  &trans     &kp BSLH      &kp UNDERSCORE  &trans
                                      &trans    &trans       &trans                                                              &trans     &trans        &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        function_layer {
            display-name = "FN";
            bindings = <
&sys_reset                            &kp F1   &kp F2      &kp F3        &kp F4  &kp F5                                &mmv MOVE_UP                     &none        &kp C_PLAY_PAUSE  &kp C_PREVIOUS        &kp C_NEXT    &none         &sys_reset
&kp LCTRL                             &kp F6   &kp F7      &kp F8        &kp F9  &kp F10               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none        &bt BT_SEL 0      &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &kp F11  &kp F12     &none         &tog QWERTY  &bootloader   &trans                  &mmv MOVE_DOWN                   &bootloader  &kp C_BRI_DEC     &kp C_BRIGHTNESS_INC  &none         &none         &tog SYS      
                                      &kp LEFT_GUI    &trans       &trans                                                              &none     &none        &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_FAST_FORWARD C_REWIND>;
        };

        system_layer {
            display-name = "SYS";
            bindings = <
&trans  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &none                              &mmv MOVE_UP                        &none           &none  &none   &none  &none  &bt BT_CLR
&trans  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &none              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT     &none           &none  &none   &none  &none  &none
&none   &rgb_ug RGB_OFF  &rgb_ug RGB_ON   &none            &none            &none  &kp RGB_TOG                 &mmv MOVE_DOWN                      &bt BT_CLR_ALL  &none  &none   &none  &to DVRK  &none
                                          &trans           &mo SYM            &trans                                                                 &trans          &mo NUM  &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
